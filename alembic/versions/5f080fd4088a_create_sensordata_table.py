"""create sensordata table

Revision ID: 5f080fd4088a
Revises: 177edfdc974a
Create Date: 2025-05-14 20:29:05.083813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f080fd4088a'
down_revision: Union[str, None] = '177edfdc974a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensordata',
    sa.Column('air_humidity', sa.Float(), nullable=True),
    sa.Column('air_temperature_c', sa.Float(), nullable=True),
    sa.Column('pressure_kpa', sa.Float(), nullable=True),
    sa.Column('soil_humidity', sa.Float(), nullable=True),
    sa.Column('soil_moisture', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.Column('wind_speed_kmh', sa.Float(), nullable=True),
    sa.Column('number_of_working_sensors', sa.Float(), nullable=True),
    sa.Column('prediction', sa.Integer(), nullable=True),
    sa.Column('rainfall', sa.Float(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensordata_id'), 'sensordata', ['id'], unique=False)
    op.create_table('nonworkingsensor',
    sa.Column('sensor_name', sa.String(), nullable=False),
    sa.Column('sensor_data_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sensor_data_id'], ['sensordata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nonworkingsensor_id'), 'nonworkingsensor', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nonworkingsensor_id'), table_name='nonworkingsensor')
    op.drop_table('nonworkingsensor')
    op.drop_index(op.f('ix_sensordata_id'), table_name='sensordata')
    op.drop_table('sensordata')
    # ### end Alembic commands ###
